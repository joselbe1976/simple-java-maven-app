package com.common.hibernate.entidades.tinnova;
// Generated 12-abr-2016 16:30:08 by Hibernate Tools 3.5.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * M4tDepartamentos generated by hbm2java
 */
@Entity
@Table(name = "M4T_DEPARTAMENTOS", schema = "dbo", catalog = "EMIND")
public class M4tDepartamentos implements java.io.Serializable {

	private M4tDepartamentosId id;
	private M4tEmpleados m4tEmpleadosByFkEmplDptosResps;
	private M4tEmpleados m4tEmpleadosByFkEmpleadDeptos;
	private String NDepartamento;
	private Date fecUltActualizac;
	private String coment;
	private String idUsuario;
	private Set<M4tHistDepartam> m4tHistDepartams = new HashSet<M4tHistDepartam>(0);

	public M4tDepartamentos() {
	}

	public M4tDepartamentos(M4tDepartamentosId id, M4tEmpleados m4tEmpleadosByFkEmplDptosResps,
			M4tEmpleados m4tEmpleadosByFkEmpleadDeptos, String NDepartamento) {
		this.id = id;
		this.m4tEmpleadosByFkEmplDptosResps = m4tEmpleadosByFkEmplDptosResps;
		this.m4tEmpleadosByFkEmpleadDeptos = m4tEmpleadosByFkEmpleadDeptos;
		this.NDepartamento = NDepartamento;
	}

	public M4tDepartamentos(M4tDepartamentosId id, M4tEmpleados m4tEmpleadosByFkEmplDptosResps,
			M4tEmpleados m4tEmpleadosByFkEmpleadDeptos, String NDepartamento, Date fecUltActualizac, String coment,
			String idUsuario, Set<M4tHistDepartam> m4tHistDepartams) {
		this.id = id;
		this.m4tEmpleadosByFkEmplDptosResps = m4tEmpleadosByFkEmplDptosResps;
		this.m4tEmpleadosByFkEmpleadDeptos = m4tEmpleadosByFkEmpleadDeptos;
		this.NDepartamento = NDepartamento;
		this.fecUltActualizac = fecUltActualizac;
		this.coment = coment;
		this.idUsuario = idUsuario;
		this.m4tHistDepartams = m4tHistDepartams;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idSociedad", column = @Column(name = "ID_SOCIEDAD", nullable = false, length = 2) ),
			@AttributeOverride(name = "idDepartamento", column = @Column(name = "ID_DEPARTAMENTO", nullable = false, length = 8) ) })
	public M4tDepartamentosId getId() {
		return this.id;
	}

	public void setId(M4tDepartamentosId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ID_SOCIEDAD", referencedColumnName = "ID_SOCIEDAD", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "ID_RESPONS_RESP", referencedColumnName = "ID_EMPLEADO", insertable = false, updatable = false) })
	public M4tEmpleados getM4tEmpleadosByFkEmplDptosResps() {
		return this.m4tEmpleadosByFkEmplDptosResps;
	}

	public void setM4tEmpleadosByFkEmplDptosResps(M4tEmpleados m4tEmpleadosByFkEmplDptosResps) {
		this.m4tEmpleadosByFkEmplDptosResps = m4tEmpleadosByFkEmplDptosResps;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ID_SOCIEDAD", referencedColumnName = "ID_SOCIEDAD", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "ID_RESPONSABLE", referencedColumnName = "ID_EMPLEADO", nullable = false, insertable = false, updatable = false) })
	public M4tEmpleados getM4tEmpleadosByFkEmpleadDeptos() {
		return this.m4tEmpleadosByFkEmpleadDeptos;
	}

	public void setM4tEmpleadosByFkEmpleadDeptos(M4tEmpleados m4tEmpleadosByFkEmpleadDeptos) {
		this.m4tEmpleadosByFkEmpleadDeptos = m4tEmpleadosByFkEmpleadDeptos;
	}

	@Column(name = "N_DEPARTAMENTO", nullable = false, length = 40)
	public String getNDepartamento() {
		return this.NDepartamento;
	}

	public void setNDepartamento(String NDepartamento) {
		this.NDepartamento = NDepartamento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FEC_ULT_ACTUALIZAC", length = 23)
	public Date getFecUltActualizac() {
		return this.fecUltActualizac;
	}

	public void setFecUltActualizac(Date fecUltActualizac) {
		this.fecUltActualizac = fecUltActualizac;
	}

	@Column(name = "COMENT")
	public String getComent() {
		return this.coment;
	}

	public void setComent(String coment) {
		this.coment = coment;
	}

	@Column(name = "ID_USUARIO", length = 40)
	public String getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(String idUsuario) {
		this.idUsuario = idUsuario;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "m4tDepartamentos")
	public Set<M4tHistDepartam> getM4tHistDepartams() {
		return this.m4tHistDepartams;
	}

	public void setM4tHistDepartams(Set<M4tHistDepartam> m4tHistDepartams) {
		this.m4tHistDepartams = m4tHistDepartams;
	}

}
