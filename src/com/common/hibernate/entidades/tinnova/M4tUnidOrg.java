package com.common.hibernate.entidades.tinnova;
// Generated 12-abr-2016 16:30:08 by Hibernate Tools 3.5.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * M4tUnidOrg generated by hbm2java
 */
@Entity
@Table(name = "M4T_UNID_ORG", schema = "dbo", catalog = "EMIND")
public class M4tUnidOrg implements java.io.Serializable {

	private M4tUnidOrgId id;
	private M4tUnidOrg m4tUnidOrg;
	private String NUnidad;
	private String coment;
	private Date fecUltActualizac;
	private String idUsuario;
	private char idTipUnidOrgan;
	private String idTipoNodoSt;
	private Set<M4tHistUnidOrg> m4tHistUnidOrgs = new HashSet<M4tHistUnidOrg>(0);
	private Set<M4tUnidOrg> m4tUnidOrgs = new HashSet<M4tUnidOrg>(0);

	public M4tUnidOrg() {
	}

	public M4tUnidOrg(M4tUnidOrgId id, M4tUnidOrg m4tUnidOrg, String NUnidad, char idTipUnidOrgan,
			String idTipoNodoSt) {
		this.id = id;
		this.m4tUnidOrg = m4tUnidOrg;
		this.NUnidad = NUnidad;
		this.idTipUnidOrgan = idTipUnidOrgan;
		this.idTipoNodoSt = idTipoNodoSt;
	}

	public M4tUnidOrg(M4tUnidOrgId id, M4tUnidOrg m4tUnidOrg, String NUnidad, String coment, Date fecUltActualizac,
			String idUsuario, char idTipUnidOrgan, String idTipoNodoSt, Set<M4tHistUnidOrg> m4tHistUnidOrgs,
			Set<M4tUnidOrg> m4tUnidOrgs) {
		this.id = id;
		this.m4tUnidOrg = m4tUnidOrg;
		this.NUnidad = NUnidad;
		this.coment = coment;
		this.fecUltActualizac = fecUltActualizac;
		this.idUsuario = idUsuario;
		this.idTipUnidOrgan = idTipUnidOrgan;
		this.idTipoNodoSt = idTipoNodoSt;
		this.m4tHistUnidOrgs = m4tHistUnidOrgs;
		this.m4tUnidOrgs = m4tUnidOrgs;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idSociedad", column = @Column(name = "ID_SOCIEDAD", nullable = false, length = 2) ),
			@AttributeOverride(name = "idUnidad", column = @Column(name = "ID_UNIDAD", nullable = false, length = 10) ) })
	public M4tUnidOrgId getId() {
		return this.id;
	}

	public void setId(M4tUnidOrgId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ID_SOCIEDAD", referencedColumnName = "ID_SOCIEDAD", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "ID_UNIDAD_SUPERIOR", referencedColumnName = "ID_UNIDAD", nullable = false, insertable = false, updatable = false) })
	public M4tUnidOrg getM4tUnidOrg() {
		return this.m4tUnidOrg;
	}

	public void setM4tUnidOrg(M4tUnidOrg m4tUnidOrg) {
		this.m4tUnidOrg = m4tUnidOrg;
	}

	@Column(name = "N_UNIDAD", nullable = false, length = 40)
	public String getNUnidad() {
		return this.NUnidad;
	}

	public void setNUnidad(String NUnidad) {
		this.NUnidad = NUnidad;
	}

	@Column(name = "COMENT")
	public String getComent() {
		return this.coment;
	}

	public void setComent(String coment) {
		this.coment = coment;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FEC_ULT_ACTUALIZAC", length = 23)
	public Date getFecUltActualizac() {
		return this.fecUltActualizac;
	}

	public void setFecUltActualizac(Date fecUltActualizac) {
		this.fecUltActualizac = fecUltActualizac;
	}

	@Column(name = "ID_USUARIO", length = 40)
	public String getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(String idUsuario) {
		this.idUsuario = idUsuario;
	}

	@Column(name = "ID_TIP_UNID_ORGAN", nullable = false, length = 1)
	public char getIdTipUnidOrgan() {
		return this.idTipUnidOrgan;
	}

	public void setIdTipUnidOrgan(char idTipUnidOrgan) {
		this.idTipUnidOrgan = idTipUnidOrgan;
	}

	@Column(name = "ID_TIPO_NODO_ST", nullable = false, length = 10)
	public String getIdTipoNodoSt() {
		return this.idTipoNodoSt;
	}

	public void setIdTipoNodoSt(String idTipoNodoSt) {
		this.idTipoNodoSt = idTipoNodoSt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "m4tUnidOrg")
	public Set<M4tHistUnidOrg> getM4tHistUnidOrgs() {
		return this.m4tHistUnidOrgs;
	}

	public void setM4tHistUnidOrgs(Set<M4tHistUnidOrg> m4tHistUnidOrgs) {
		this.m4tHistUnidOrgs = m4tHistUnidOrgs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "m4tUnidOrg")
	public Set<M4tUnidOrg> getM4tUnidOrgs() {
		return this.m4tUnidOrgs;
	}

	public void setM4tUnidOrgs(Set<M4tUnidOrg> m4tUnidOrgs) {
		this.m4tUnidOrgs = m4tUnidOrgs;
	}

}
